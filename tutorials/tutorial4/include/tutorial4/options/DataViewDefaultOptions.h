// Generated by commsdsl2comms v4.0.0

/// @file
/// @brief Contains definition of protocol data view default options.

#pragma once

#include "tutorial4/options/DefaultOptions.h"

namespace tutorial4
{

namespace options
{

/// @brief Default data view options of the protocol.
template <typename TBase = tutorial4::options::DefaultOptions>
struct DataViewDefaultOptionsT : public TBase
{
    /// @brief Extra options for fields.
    struct field : public TBase::field
    {
        struct KeyValuePropMembers : public TBase::field::KeyValuePropMembers
        {
            struct Prop3Members : public TBase::field::KeyValuePropMembers::Prop3Members
            {
                /// @brief Extra options for @ref
                ///     tutorial4::field::KeyValuePropMembers::Prop3Members::Val
                ///     field.
                using Val =
                    std::tuple<
                        comms::option::app::OrigDataView,
                        typename TBase::field::KeyValuePropMembers::Prop3Members::Val
                    >;
                
            }; // struct Prop3Members
            
        }; // struct KeyValuePropMembers
        
        struct TlvPropMembers : public TBase::field::TlvPropMembers
        {
            struct Prop6Members : public TBase::field::TlvPropMembers::Prop6Members
            {
                /// @brief Extra options for @ref
                ///     tutorial4::field::TlvPropMembers::Prop6Members::Val
                ///     field.
                using Val =
                    std::tuple<
                        comms::option::app::OrigDataView,
                        typename TBase::field::TlvPropMembers::Prop6Members::Val
                    >;
                
            }; // struct Prop6Members
            
            struct AnyMembers : public TBase::field::TlvPropMembers::AnyMembers
            {
                /// @brief Extra options for @ref
                ///     tutorial4::field::TlvPropMembers::AnyMembers::Val
                ///     field.
                using Val =
                    std::tuple<
                        comms::option::app::OrigDataView,
                        typename TBase::field::TlvPropMembers::AnyMembers::Val
                    >;
                
            }; // struct AnyMembers
            
        }; // struct TlvPropMembers
        
    }; // struct field
    
    /// @brief Extra options for frames.
    struct frame : public TBase::frame
    {
        /// @brief Extra options for layers of
        ///     @ref tutorial4::frame::Frame frame.
        struct FrameLayers : public TBase::frame::FrameLayers
        {
            /// @brief Extra options for @ref
            ///     tutorial4::frame::FrameLayers::Data
            ///     layer.
            using Data =
                std::tuple<
                    comms::option::app::OrigDataView,
                    typename TBase::frame::FrameLayers::Data
                >;
            
            
        }; // struct FrameLayers
        
    }; // struct frame
    
    
};

/// @brief Alias to @ref DataViewDefaultOptionsT with default template parameter.
using DataViewDefaultOptions = DataViewDefaultOptionsT<>;

} // namespace options

} // namespace tutorial4
